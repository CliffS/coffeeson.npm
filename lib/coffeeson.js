// Generated by CoffeeScript 2.2.3
(function() {
  var coffee, compile, convertFile, fileToJSON, fs, parse, parseFile, toJSON;

  coffee = require('coffeescript');

  fs = require('fs');

  // @private - Compiles coffeeson content to JS with coffee-script
  compile = function(src) {
    return coffee.compile(src.toString(), {
      bare: true
    });
  };

  // Parse a coffeeson string and return a JS native object
  parse = function(src) {
    return eval(compile(src));
  };

  // Parse a coffeeson file and return a JS native object
  parseFile = function(name, cb) {
    return new Promise((resolve, reject) => {
      return fs.readFile(name, function(err, src) {
        if (err) {
          return reject(err);
        } else {
          return resolve(parse(src));
        }
      });
    });
  };

  // Parse a coffeeson string and return JSON
  toJSON = function(src, replacer, spacer) {
    return JSON.stringify(parse(src), replacer, spacer);
  };

  // Parse a coffeeson string and return pretty JSON
  toJSON.pretty = function(src, replacer) {
    return toJSON(src, replacer, 2);
  };

  // Asynchronously read a file and callback with the content as JSON
  fileToJSON = function(name, ...args) {
    return new Promise((resolve, reject) => {
      return fs.readFile(name, function(err, src) {
        if (err) {
          return reject(err);
        } else {
          return resolve(toJSON(src, ...args));
        }
      });
    });
  };

  // Asynchronously read a file and callback with the content as pretty JSON
  fileToJSON.pretty = function(name) {
    return fileToJSON(name, null, 2);
  };

  // Asynchronously read a file and save a .json file right next the source file
  convertFile = function(name, ...args) {
    return fileToJSON(name, ...args).then((json) => {
      return new Promise((resolve, reject) => {
        return fs.writeFile(name.replace(/\.[^.]+$/, '.json'), json, (err) => {
          if (err) {
            return reject(err);
          } else {
            return resolve(json);
          }
        });
      });
    });
  };

  // Asynchronously read a file and save a pretty .json file right next the source file
  convertFile.pretty = function(name) {
    return convertFile(name, null, 2);
  };

  // Export methods
  module.exports = {parse, parseFile, toJSON, fileToJSON, convertFile};

}).call(this);
