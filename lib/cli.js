#!/usr/bin/env node

// Generated by CoffeeScript 2.2.3
(function() {
  //!/usr/bin/env coffee

  var Cson, Getopts, cson, filename, i, len, options, ref, syntax, version;

  Cson = require('./coffeeson');

  Getopts = require('getopts');

  options = Getopts(process.argv.slice(2), {
    alias: {
      h: ['help', '?'],
      V: 'version',
      n: 'no-pretty'
    },
    boolean: ['h', 'V', 'p'],
    unknown: (option) => {
      return false;
    }
  });

  syntax = function() {
    console.log("coffeeson [ flags ] filename [filename...]\nflags:  -h --help      -- this text\n        -V --version   -- display version and exit\n        -n --no-pretty -- don't prettify the output");
    return process.exit(1);
  };

  version = function() {
    var pack;
    pack = require('../package.json');
    console.log(`coffeeson version ${pack.version}`);
    return process.exit();
  };

  if (options.help) {
    // console.log options
    syntax();
  }

  if (options.version) {
    version();
  }

  if (!options._.length) {
    syntax();
  }

  cson = Cson.convertFile;

  if (!options.n) {
    cson = cson.pretty;
  }

  ref = options._;
  for (i = 0, len = ref.length; i < len; i++) {
    filename = ref[i];
    (async function(filename) {
      var err;
      try {
        await cson(filename);
        return console.log(`Processed: ${filename}`);
      } catch (error) {
        err = error;
        return console.error(`${filename}: ${err}`);
      }
    })(filename);
  }

}).call(this);
